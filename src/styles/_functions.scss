/**
 * Replace `$search` with `$replace` in `$string`
 *
 * @author Hugo Giraudel
 * @param {String} $string - Initial string
 * @param {String} $search - Substring to replace
 * @param {String} $replace ('') - New value
 * @return {String} - Updated string
 */
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

/**
 * http://codepen.io/philippkuehn/pen/zGEjxB
 */
@function url-encode($string) {
  $map: (
    "%": "%25",
    "<": "%3C",
    ">": "%3E",
    " ": "%20",
    "!": "%21",
    "*": "%2A",
    "'": "%27",
    '"': "%22",
    "(": "%28",
    ")": "%29",
    ";": "%3B",
    ":": "%3A",
    "@": "%40",
    "&": "%26",
    "=": "%3D",
    "+": "%2B",
    "$": "%24",
    ",": "%2C",
    "/": "%2F",
    "?": "%3F",
    "#": "%23",
    "[": "%5B",
    "]": "%5D",
  );

  $new: $string;

  @each $search, $replace in $map {
    $new: str-replace($new, $search, $replace);
  }

  @return $new;
}

@function inline-svg($string) {
  @return url('data:image/svg+xml;charset=US-ASCII,#{url-encode($string)}');
}

/**
 * Change the fill color of an svg.
 * @param  {[type]} $svg
 * @param  {[type]} $color: $black
 */
@function svg-color($svg, $color: $black) {
  $result: str-replace($svg, 'fill:#FFFFFF', 'fill:' + $color);
  $result: str-replace($result, 'fill:#fff', 'fill:' + $color);
  $result: str-replace($result, 'fill="#FFFFFF"', 'fill="' + $color + '"');
  $result: str-replace($result, 'fill="#fff"', 'fill="' + $color + '"');
  $result: str-replace($result, 'stroke:#FFFFFF', 'stroke:' + $color);
  $result: str-replace($result, 'stroke:#fff', 'stroke:' + $color);
  $result: str-replace($result, 'stroke="#FFFFFF"', 'stroke="' + $color + '"');
  $result: str-replace($result, 'stroke="#fff"', 'stroke="' + $color + '"');
  $result: inline-svg($result);

  @return $result;
}

/**
 * Create properly pathed image url
 * Usage: background-image: image-url('image.png');
 */
@function image-url($string) {
  $image-path: '/themes/custom/mmg9/dist/images/';

  @return url('#{$image-path}#{$string}');
}

@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}
